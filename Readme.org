* Library Information
 Readme.org --- Add conditional branching to keyboard macros

 - Filename :: [[file:kmacro-query-extra.el][kmacro-decision.el]]
 - Description :: Add conditional branching to keyboard macros
 - Author :: Joe Bloggs <vapniks@yahoo.com>
 - Maintainer :: Joe Bloggs <vapniks@yahoo.com>
 - Copyleft (â†ƒ) 2013, Joe Bloggs, all rites reversed.
 - Created :: 2013-05-15 05:04:08
 - Version :: 0.1
 - Last-Updated :: 2013-05-15 05:04:08
 -           By :: Joe Bloggs
 - URL :: https://github.com/vapniks/kmacro-decision
 - Keywords :: convenience
 - Compatibility :: GNU Emacs 24.3.1
 - Package-Requires: ((el-x "1.0"))

* Commentary
Bitcoin donations gratefully accepted: 1D6meUBuHXLxQNiBfaNKYRfWVVTTYU2okM

This library changes keyboard macro query points into decision points or conditional
branches. A query point can be created by typing C-x q or entering the `kbd-macro-query'
command when entering a keyboard macro.
When the macro is replayed and the query point is reached the user will be prompted with
options to either quit the macro, continue the rest of the macro, enter recursive edit and
store a new macro, add a conditional branch (explained next), or replay a previously saved
(named) macro. The user may also recenter the window by pressing C-l.

If the user chooses to add a conditional branch they will be prompted for a condition form,
and an action to perform if that condition evaluates to non-nil. The action can be to quit the macro,
continue the macro, create a new macro for that condition, or replay a previously saved macro.
If the condition evaluates to non-nil the next time the macro is replayed then the corresponding
action will be performed. If several conditions-action pairs are created for a given query point
then the conditions will be evaluated in the order in which they where created until one of them evaluates
to non-nil. If they all evaluate to nil then the user will be prompted as before to either quit, continue,
create/replay a macro, or add another condition-action pair.

By adding query points to the end of each newly created macro, macro decision trees can be built up
and complex automated operations performed.

Note: you can also use `kbd-macro-query' to choose a named macro to replay when not recording a macro
(in case you forgot the name). Also note that when prompted for a condition you can scroll forward through
the input history using M-n to get conditions for searching for strings/regexps. You can add to this list
by customizing `kmacro-decision-conditions'.

* Installation

 - If you have [[http://www.marmalade-repo.org/][marmalade-repo.org]], this kmacro-decision is part of the emacs packages you can install.  
   Just type M-x package-install kmacro-decision marmalade 
 - Otherwise download the library from here Lisp:kmacro-decision.el, and put it in a directory in the emacs load path, like ~/.emacs.d
 - Add (require 'kmacro-decision) in your ~/.emacs file
